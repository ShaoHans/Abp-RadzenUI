@page "/tenantManagement/tenants"
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.TenantManagement
@attribute [Authorize(TenantManagementPermissions.Tenants.Default)]
@inherits AbpCrudPageBase<ITenantAppService, TenantDto, Guid, GetTenantsInput, TenantCreateDto, TenantUpdateDto>

<PageTitle>@L["Tenants"]</PageTitle>

<RadzenCard class="rz-my-6">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">
        @if (HasCreatePermission)
        {
            <RadzenStack Orientation="Orientation.Vertical" Gap="4px">
                <RadzenButton Icon="add" Text="@L["NewTenant"]" Click="@(async()=>await OpenCreateDialogAsync<Create>(L["NewTenant"], ()=>{return SetDialogOptions();}))" />
            </RadzenStack>
        }
        <RadzenStack Orientation="Orientation.Vertical" style="margin-left: auto;" Gap="4px">
            <SearchTextBox PlaceHoder="@L["DisplayName:TenantName"]"
                           @bind-Keyword="@GetListInput.Filter" SearchAsync="@_grid.Reload" />
        </RadzenStack>
    </RadzenStack>
</RadzenCard>

<RadzenDataGrid @ref="_grid" Data="@_entities" AllowPaging="true" AllowSorting="true"
                PagerHorizontalAlign="HorizontalAlign.Center"
                PageSizeOptions="@_pageSizeOptions" ShowPagingSummary="@_showPagerSummary" LoadData="LoadDataAsync"
                Count="@_totalCount" IsLoading="@_isLoading">    
    <Columns>
        <RadzenDataGridColumn Property="@nameof(TenantDto.Id)" Title="ID" Width="80px" Visible="false" />
        <RadzenDataGridColumn Property="@nameof(TenantDto.Name)" Title="@L["DisplayName:TenantName"]" Width="160px" />
        <RadzenDataGridColumn Title="@L["Actions"]" Width="160px" Filterable="false" Sortable="false">
            <Template>
                @if (HasUpdatePermission)
                {
                    <RadzenButton Icon="edit" title="@L["Edit"]" ButtonStyle="ButtonStyle.Success"
                                  Click="@(async () => await OpenEditDialogAsync<Edit>(@L["Edit"], context, ()=>{return SetDialogOptions(300);}))" />
                }
                
                @if (HasDeletePermission)
                {
                    <RadzenButton Icon="delete" title="@L["Delete"]" ButtonStyle="ButtonStyle.Danger"
                                  Click=@(async () => await OpenDeleteConfirmDialogAsync(context.Id, L["Delete"], L["TenantDeletionConfirmationMessage",context.Name])) />
                }
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
    